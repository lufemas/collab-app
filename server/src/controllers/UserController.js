// index, show, store, update, destroy
const User = require('../models/User')

module.exports = {
  
  async store(req, res){

// _id	String	automatically generated by MongoDB
// googleId	String	from GoogleApi
// imageUrl	String	from GoogleApi
// email	String	from GoogleApi
// name	String	from GoogleApi
// screenName	String	created on first login
// favorites	[ObjectId]	favorite contents
// dateCreated	String	created date

    const {googleId, imageUrl, email, name, screenName } = req.body

    let user = await User.findOne({googleId})

    if (!user){

      user = await User.findOne({screenName})

      if (!user){

        user = await User.create({
          googleId,
          imageUrl,
          email,
          name,
          screenName
        })
      
      }else{
        return res.status(400).json({error: 'Screen Name already in use!', code:'screenName'})
      }
 
    }

    return res.json(user)

  },

  
  async update(req, res){
    
    const { user_id } = req.headers

    const user = await User.findById(user_id)

    if (!user){
      return res.status(400).json({error: 'User does not exist!'})
    }else{

      const {favorite} = req.body

      user.favorites.push(favorite)
      await User.updateOne({_id: user_id}, user)
    }

    return res.json(user)

  },

  async show(req, res){
    const user_id  = req.params.id

    const user = await User.findOne({_id:user_id})

    if (!user){
      return res.status(400).json({error: 'User does not exist!'})
    }

    return res.json(user)

  },

}